# -*- coding: utf-8 -*-
"""Services_Distribution.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OvH6sYK16XWz5AYT4CQAXjL_uIS8qCpR
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

# Load SERVICES data
d1 = files.upload()
services = pd.read_csv('SERVICES.csv')

# Load ADMISSIONS data
d2 = files.upload()
admissions = pd.read_csv('ADMISSIONS.csv')

# Load CALLOUT data
d3 = files.upload()
callout = pd.read_csv('CALLOUT.csv')

# Convert date columns to datetime
admissions['admittime'] = pd.to_datetime(admissions['admittime'])
callout['createtime'] = pd.to_datetime(callout['createtime'])

# Visualization 1: Distribution of Current Services
plt.figure(figsize=(12, 6))
services['curr_service'].value_counts().plot(kind='bar')
plt.title('Distribution of Current Services')
plt.xlabel('Service')
plt.ylabel('Count')
plt.xticks(rotation=45, ha='right')
for i, v in enumerate(services['curr_service'].value_counts()):
    plt.text(i, v, str(v), ha='center', va='bottom')
plt.tight_layout()
plt.show()

print("Conclusion: The bar chart shows that MED (Medical) service is the most common, followed by SURG (Surgical) and CMED (Cardiac Medical). This suggests that the hospital has a high demand for general medical and surgical services.")

# Visualization 2: Admission Types Over Time
admissions['year'] = admissions['admittime'].dt.year
admission_types = admissions.groupby(['year', 'admission_type']).size().unstack()
admission_types.plot(kind='area', stacked=True, figsize=(12, 6))
plt.title('Admission Types Over Time')
plt.xlabel('Year')
plt.ylabel('Number of Admissions')
plt.legend(title='Admission Type', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()

print("Conclusion: The stacked area chart reveals that emergency admissions have consistently been the most common type over the years. There's also a noticeable increase in overall admissions over time, which could indicate growing demand for hospital services or an expansion of the hospital's capacity.")

# Visualization 3: Callout Outcomes
callout_outcomes = callout['callout_outcome'].value_counts()
plt.figure(figsize=(10, 10))
plt.pie(callout_outcomes, labels=callout_outcomes.index, autopct='%1.1f%%', startangle=90)
plt.title('Distribution of Callout Outcomes')
plt.axis('equal')
plt.show()

print("Conclusion: The pie chart demonstrates that the majority of callouts result in discharge, followed by cancellations. This suggests that the hospital's callout system is effective in managing patient flow, with most patients being successfully discharged after a callout.")